plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.10'
    id "io.qameta.allure" version "2.8.1"
}

ext {
    allureGradleVersion = '2.7.0'
    allureVersion = '2.13.1'
    selenideVersion = '5.5.1'
    testNgVersion = '7.0.0'
}

allure {
    autoconfigure = true
    version = "$allureGradleVersion"  // Latest Allure Version
    configuration = 'compile'
    aspectjweaver = true
    aspectjVersion = '1.8.10'
    resultsDir = file("${rootDir.absolutePath}/build/allure-results")
    reportDir = file("${rootDir.absolutePath}/build/reports/allure-report")
    useTestNG {
        version = '2.0-BETA10'
    }
    downloadLink = "https://dl.bintray.com/qameta/generic/io/qameta/allure/allure/$allureGradleVersion/allure-${allureGradleVersion}.zip"
}



group 'com.example'
version '1.0'

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }

}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation([
            "org.testng:testng:$testNgVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-testng:${allureVersion}",
            "io.qameta.allure:allure-selenide:${allureVersion}",
    ])
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-beta4'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.8.0-beta4'
    // implementation group: 'com.github.testdotai', name: 'classifier-client-java', version: '1.0.0'
    compile group: 'io.rest-assured', name: 'rest-assured', version: '4.1.2'
    compile group: 'io.rest-assured', name: 'json-path', version: '4.1.2'
    compile group: 'io.rest-assured', name: 'json-schema-validator', version: '4.1.2'

}

import io.qameta.allure.gradle.task.AllureReport
task allureAggregatedReport(type: AllureReport) {
    allure.resultsDir
    // Task: ./gradlew allureServe  - to watch the rgenerated report
}


test {
    useTestNG(){
        suites 'src/test/resources/suites/suite.xml'
    }
}.finalizedBy allureAggregatedReport



compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

clean.doFirst {
    delete("${rootDir}/allure-results")
    delete("${rootDir}/.allure")
    delete("${rootDir}/build")
    delete("${rootDir}/out")
}